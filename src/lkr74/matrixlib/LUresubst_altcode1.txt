		for (int i = 0, offVi = 0; i < N; i++) {

			boolean bImatch = offVi < nNodes && bVspB[offVi].r == i ? true : false;
			// the permutations of decomposition stage need to be unpermuted during the passes
			int ip = mutatorLU[i];
			int offVip = findHVspNode(bVspB, 0, nNodes - 1, ip, -1);				// see if b[ip] exists in sparse array
			if (offVip >= 0) {														// if b[ip] is a non-zero, existing node...
				sum = bVspB[offVip].v;												// sum = b[ip]
				if (bImatch)														// if b[i] matches current row index i (thus is non-zero)
					bVspB[offVip].v = bVspB[offVi].v;								// b[ip] = b[i] (assigning to existing node)
				else {
					removeLocalHVspNode(aVspB, offVip, 1);							// if assigning to a zero, remove the node
					nNodes = aVspB.nodes;
					vectorB.nNZ--;
					bVspB = aVspB.array;
				}
			} else {
				sum = 0;
				if (bImatch) {														// create node b[ip] only if b[i] is nonzero
					NspNode newNode = bVspB[offVi].clone();
					newNode.r = ip;
					insertLocalHVspNode(aVspB, -offVip-1, 1, newNode);				// b[ip] = b[i]	(assigning by inserting a node)
					insertLocalHVspNode(vectorB.Hsp[ip], 0, 0, newNode);
					nNodes = aVspB.nodes;
					vectorB.nNZ++;
					bVspB = aVspB.array;
				}
			}

			if (ii >= 0)
				sum -= multiplyStartEndHVsp(bLU[1].Hsp[i], aVspB, 0, 1, ii, i - 1);	// for (ii <= j < i), sum -= a[i][j] * b[j]
			else
				if (!nearZero(sum)) ii = i;					// nonzero element found, we'll have to do the sums in loop above from now on

			if (bImatch) {
				if (nearZero(sum))	{
					removeLocalHVspNode(aVspB, offVi, 1);							// b[i] = sum (b[i] exists as nonzero, but is assigned a zero)
					bVspB = aVspB.array;
					vectorB.nNZ--;
				} else bVspB[offVi].v = sum;										// b[i] = sum (simple assignment if b[i] exists as non-zero)
				offVi++;
			} else {
				if (!nearZero(sum)) {
					NspNode newNode = new NspNode(i, 0, sum, 0, offVi, 0);
					insertLocalHVspNode(aVspB, offVi, 1, newNode);					// b[i] = sum (b[i] was zero/nonexistent, assigned value was nonzero)
					insertLocalHVspNode(vectorB.Hsp[i], 0, 0, newNode);				// insert also to horisontal aspect
					bVspB = aVspB.array;
					vectorB.nNZ++;
				}																	// b[i] = sum (b[i] was zero and assignment was zero, nothing happens)
			}
		}
